window.eva_lib = {};

window.onload = function() {
	for ( var key in window.eva_lib ) {
		console.log('Initialisation de l\'objet: ' + key);
		window.eva_lib[key].init();
	}
};

// window.eva_lib.init_array_form = function() {
// 	console.log('Init array form');
// 	 window.eva_lib.array_form.init();
// }

window.eva_lib.tab = {};

window.eva_lib.tab.init = function() {
	window.eva_lib.tab.event();
};

window.eva_lib.tab.event = function() {
  jQuery( document ).on( 'click', '.wp-digi-global-sheet-tab li', window.eva_lib.tab.load );
};

window.eva_lib.tab.load = function( event ) {
  event.preventDefault();
  var a = jQuery( this );

  jQuery( ".wp-digi-global-sheet-tab li.active" ).removeClass( "active" );
  a.addClass( "active" );

  jQuery( ".wp-digi-content" ).addClass( "wp-digi-bloc-loading" );

  var data = {
    action:           "load_tab_content",
    _wpnonce:         a.data( 'nonce' ),
    tab_to_display:   a.data( "action" ),
    element_id :      a.closest( '.wp-digi-sheet' ).data( 'id' ),
  };

  jQuery.post( window.ajaxurl, data, function( response ) {
    jQuery( ".wp-digi-content" ).replaceWith( response.data.template );

		window.eva_lib.tab.call_tab_changed();
  } );
};

window.eva_lib.tab.call_tab_changed = function() {
	for ( var key in window.eva_lib ) {
		if (window.eva_lib[key].tab_changed) {
			console.log('Tab changed de l\'objet: ' + key);
			window.eva_lib[key].tab_changed();
		}
	}
}

window.eva_lib.toggle = {};

window.eva_lib.toggle.init = function() {
	window.eva_lib.toggle.event();
};

window.eva_lib.toggle.event = function() {
  jQuery( document ).on( 'click', 'toggle', window.eva_lib.toggle.open );
  jQuery( document ).on( 'click', 'body', window.eva_lib.toggle.close );
};

window.eva_lib.toggle.open = function( event ) {
	var target = undefined;
  // Récupères la box de destination mis dans l'attribut du toggle
  if ( jQuery( this ).data( 'parent' ) ) {
	  target = jQuery( this ).closest( "." + jQuery( this ).data( 'parent' ) ).find( "." + jQuery( this ).data( 'target' ) );
	}
	else {
		target = jQuery( "." + jQuery( this ).data( 'target' ) );
	}

	console.log(target);

	if ( target ) {
	  target.toggle();
	  event.stopPropagation();
	}
};

window.eva_lib.toggle.close = function( event ) {
  jQuery( '.digi-popup' ).hide();
}

window.eva_lib.action = {};

window.eva_lib.action.init = function() {
	window.eva_lib.action.event();
};

window.eva_lib.action.event = function() {
  jQuery( document ).on( 'click', '.action-input', window.eva_lib.action.exec_input );
  jQuery( document ).on( 'click', '.action-attribute', window.eva_lib.action.exec_attribute );
  jQuery( document ).on( 'click', '.wp-digi-action-delete', window.eva_lib.action.delete );
};

window.eva_lib.action.exec_input = function(event) {
  var element = jQuery( this );
	var parent_element = element;

	if ( element.data( 'parent' ) ) {
			parent_element = element.closest( '.' + element.data( 'parent' ) );
	}

	if ( !element[0].getAttribute(' disabled' ) ) {
		element[0].setAttribute( 'disabled', true );
		element.closest( '.wp-digi-bloc-loader' ).addClass( 'wp-digi-bloc-loading' );

		var list_input = window.eva_eva_lib.array_form.get_input( parent_element );
		var data = {};
		for (var i = 0; i < list_input.length; i++) {
			if ( list_input[i].name ) {
				data[list_input[i].name] = list_input[i].value;
			}
		}

    window.eva_lib.request.send( element, data );
	}
};

window.eva_lib.action.exec_attribute = function(event) {
  var element = jQuery( this );

	if ( !element[0].getAttribute(' disabled' ) ) {
		element[0].setAttribute( 'disabled', true );

		element.get_data( function ( data ) {
			element.closest( '.wp-digi-bloc-loader' ).addClass( 'wp-digi-bloc-loading' );
			window.eva_lib.request.send( element, data );
		} );
	}
};

window.eva_lib.action.delete = function(event) {
  var element = jQuery( this );

	if ( !element[0].getAttribute( 'disabled' ) ) {
  	if ( window.confirm( window.digi_confirm_delete ) ) {
			element[0].setAttribute( 'disabled', true );
	    element.get_data( function ( data ) {
				element.closest( '.wp-digi-bloc-loader' ).addClass( 'wp-digi-bloc-loading' );
	      window.eva_lib.request.send( element, data );
	    } );
	  }
	}
};

window.eva_lib.array_form = {};

window.eva_lib.array_form.init = function() {
	window.eva_lib.array_form.event();
};

window.eva_lib.array_form.event = function() {
	jQuery( document ).on( 'click', '.wp-digi-action-edit', window.eva_lib.array_form.send_form );
};

window.eva_lib.array_form.get_input = function( parent ) {
	return parent.find('input');
};

window.eva_lib.array_form.send_form = function( event ) {
	event.preventDefault();

	var element = jQuery( this );
	element.closest( '.wp-digi-bloc-loader' ).addClass( 'wp-digi-bloc-loading' );
	var parent = element.closest( '.wp-digi-list-item' );
	var list_input = window.eva_lib.array_form.get_input( parent );

	var data = {};
	for (var i = 0; i < list_input.length; i++) {
		if ( list_input[i].name ) {
			data[list_input[i].name] = list_input[i].value;
		}
	}

	window.digirisk.request.send( element, data );
};

jQuery.fn.get_data = function( cb ) {
  this.each( function() {
    var data = {};

    for ( var i = 0; i <  jQuery( this )[0].attributes.length; i++ ) {
      var localName = jQuery( this )[0].attributes[i].localName;
      if (  localName.substr(0, 4) == 'data' ||
            localName == 'action') {

        localName = localName.substr(5);

        if ( localName == 'nonce' ) localName = '_wpnonce';
        localName = localName.replace( '-', '_' );
        data[localName] =  jQuery( this )[0].attributes[i].value;
      }
    }

    cb( data );
  } );
};

// window.eva_lib.date = {};
//
// window.eva_lib.date.init = function() {
// 	jQuery( '.wpdigi_date' ).datepicker( { dateFormat: 'dd/mm/yy' } );
// };
//
// window.eva_lib.date.tab_changed = function() {
//   window.eva_lib.date.init();
// };

window.eva_lib.form = {};

window.eva_lib.form.init = function() {
  window.eva_lib.form.event();
};
window.eva_lib.form.event = function() {
  jQuery( document ).on( 'click', '.submit-form', window.eva_lib.form.sumbit_form );
};

window.eva_lib.form.sumbit_form = function( event ) {
	event.preventDefault();
  var element = jQuery( this );
	element.closest( 'form' ).addClass( 'loader loading' );
  element.closest( 'form' ).ajaxSubmit( {
		dataType: 'json',
    success: function( response ) {
			element.closest( '.loader' ).removeClass( 'loader loading' );
      if ( response && response.success ) {
        if ( response.data.module && response.data.callback_success ) {
          window.eva_lib[response.data.module][response.data.callback_success]( element, response );
        }
      }
      else {
        if ( response.data.module && response.data.callback_error ) {
          window.eva_lib[response.data.module][response.data.callback_error]( element, response );
        }
      }
    }
  } );
}

window.eva_lib.global = {};

window.eva_lib.global.init = function() {}


window.eva_lib.global.download_file = function( url_to_file, filename ) {
	var url = jQuery('<a href="' + url_to_file + '" download="' + filename + '"></a>');
	jQuery('.wrap').append(url);
	url[0].click();
	url.remove();
};

window.eva_lib.global.remove_diacritics = function( input ) {
  var output = "";

  var normalized = input.normalize("NFD");
  var i=0;
  var j=0;

  while (i<input.length)
  {
      output += normalized[j];

      j += (input[i] == normalized[j]) ? 1 : 2;
      i++;
  }

  return output;
};

window.eva_lib.loader = {};

window.eva_lib.loader.init = function() {};

window.eva_lib.popup = {};

window.eva_lib.popup.init = function() {
	window.eva_lib.popup.event();
};

window.eva_lib.popup.event = function() {
  jQuery( document ).on( 'click', '.open-popup', window.eva_lib.popup.open );
  jQuery( document ).on( 'click', '.digi-popup-propagation', window.eva_lib.popup.stop );
  jQuery( document ).on( 'click', 'body', window.eva_lib.popup.close );
};

window.eva_lib.popup.open = function( event ) {
  // Récupères la box de destination mis dans l'attribut du popup
  var target = jQuery( this ).closest(  "." + jQuery( this ).data( 'parent' ) ).find( "." + jQuery( this ).data( 'target' ) );
	target.toggle();
  event.stopPropagation();
};

window.eva_lib.popup.stop = function( event ) {
	event.stopPropagation();
};

window.eva_lib.popup.close = function( event ) {
  jQuery( '.digi-popup' ).hide();
}

"use strict";

var regex = {
	validateEmail: function(email) {
	    var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
	    return re.test(email);
	}
};

window.eva_lib.request = {};

window.eva_lib.request.init = function() {};

window.eva_lib.request.send = function( element, data ) {
  jQuery.post( window.ajaxurl, data, function( response ) {
		element.closest( '.wp-digi-bloc-loader' ).removeClass( 'wp-digi-bloc-loading' );

    if ( response && response.success ) {
      if ( response.data.module && response.data.callback_success ) {
        window.eva_lib[response.data.module][response.data.callback_success]( element, response );
      }
    }
    else {
      alert('error');
      if ( response.data.module && response.data.callback_error ) {
        window.eva_lib[response.data.module][response.data.callback_error]( element, response );
      }
    }
  }, "json" );
};
